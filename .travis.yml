language: python
python:
  - "3.6"
cache: pip
matrix:
  include:
    - os: osx
      language: generic
      env: PYTHON=3.6.5
    - os: osx
      language: generic
      env: PYTHON=3.6.5 TEST_MODE=PEP8

# command to install dependencies
before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew outdated openssl readline || brew upgrade openssl readline
    brew outdated tesseract || brew upgrade tesseract # install Google Tesseract
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
  fi

install:
  - python -m pip install --user -r requirements.txt
  - python -m pip install --user -r dev-requirements.txt
  - python -m pip install --user wheel codecov
  - python setup.py install

script:
  - if [[ "$TEST_MODE" == "PEP8" ]]; then
      pytest --pep8;
    else
      pytest;
    fi

after_success:
  - codecov